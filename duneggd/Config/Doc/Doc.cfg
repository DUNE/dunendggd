#=================================
# Primary 1x1x1 m^3
#=================================
[TileSide]
class                   = duneggd.SubDetector.SimpleSubDetector.SimpleSubDetectorBuilder
Material                = 'Two'
dx                      = Q('2cm')
dy                      = Q('30cm')
dz                      = Q('30cm')

[TileDS]
class                   = duneggd.SubDetector.SimpleSubDetector.SimpleSubDetectorBuilder
Material                = 'Two'
dx                      = Q('30cm')
dy                      = Q('30cm')
dz                      = Q('2cm')

[PlaneSide]
class                   = duneggd.Component.SingleArrangePlane.SingleArrangePlaneBuilder
subbuilders             = ['TileSide']
Material                = 'One'
dx                      = Q('4cm')
dy                      = Q('75cm')
dz                      = Q('75cm')
NElements               = 2
TranspV                 = [0,0,1]
InsideGap               = Q('30cm')
# 30cm for 15cm gap?

[PlaneDS]
class                   = duneggd.Component.SingleArrangePlane.SingleArrangePlaneBuilder
subbuilders             = ['TileDS']
Material                = 'One'
dx                      = Q('75cm')                 # half-dimension
dy                      = Q('75cm')                 # half-dimension
dz                      = Q('4cm')                  # half-dimension
NElements               = 2
TranspV                 = [1,0,0]
InsideGap               = Q('30cm')
# 30cm for 15cm gap?                                # full-dimension

[BlueII]
class                   = duneggd.SubDetector.SimpleSubDetector.SimpleSubDetectorBuilder
Material                = 'Two'
dx                      = Q('5cm')
dy                      = Q('5cm')
dz                      = Q('5cm')

[YellowII]
class                   = duneggd.SubDetector.SimpleSubDetector.SimpleSubDetectorBuilder
subbuilders             = ['BlueII']
Material                = 'Four'
dx                      = Q('25cm')
dy                      = Q('25cm')
dz                      = Q('25cm')
NElements               = 2
TranspV                 = [0,0,1]
InsideGap               = Q('30cm')

[YellowI]
class                   = duneggd.SubDetector.SimpleSubDetector.SimpleSubDetectorBuilder
subbuilders             = ['BlueII']
Material                = 'Four'
dx                      = Q('25cm')                 # half-dimension
dy                      = Q('25cm')                 # half-dimension
dz                      = Q('25cm')                 # half-dimension
NElements               = 3
TranspV                 = [1,0,0]
InsideGap               = Q('10cm')
# 10cm for 5cm gap?                                 # full-dimension
# TranspV                 = [0,0,1] default

[RedI]
class                   = duneggd.SubDetector.ComplexSubDetector.ComplexSubDetectorBuilder
subbuilders             = ['YellowI','YellowII']    # only this one hadles multi component detectors
Material                = 'Three'
dx                      = Q('50cm')                 # half-dimension
dy                      = Q('50cm')                 # half-dimension
dz                      = Q('50cm')+Q('5cm')        # half-dimension
NElements               = 1
InsideGap               = Q('10cm')
# 10cm for 5cm gap?                                 # full-dimension
# TranspV                 = [0,0,1] default

[BlueI]
class                   = duneggd.SubDetector.MainSubDetector.MainSubDetectorBuilder
subbuilders             = ['RedI']
Material                = 'Two'
dx                      = Q('75cm')                 # half-dimension
dy                      = Q('75cm')                 # half-dimension
dz                      = Q('75cm')                 # half-dimension
# NElements               = 1 -> fix
# TranspV                 = [0,0,0] default -> fix

[Sec]
class                   = duneggd.SubDetector.ComplexSubDetector.ComplexSubDetectorBuilder
subbuilders             = ['BlueI','PlaneDS']
Material                = 'One'
dx                      = {BlueI:dx}
dy                      = {BlueI:dy}
dz                      = {BlueI:dz}+{PlaneDS:dz}
NElements               = 1
TranspV                 = [0,0,1]
InsideGap               = Q('0m')
IndependentVolumes      = 'yes'

[Pri]
class                   = duneggd.SubDetector.ComplexSubDetector.ComplexSubDetectorBuilder
subbuilders             = ['Sec','PlaneSide']
Material                = 'Three'
dx                      = {Sec:dx}+{PlaneSide:dx}
dy                      = {Sec:dy}
dz                      = {Sec:dz}
NElements               = 1
TranspV                 = [1,0,0]
InsideGap               = Q('0m')
IndependentVolumes      = 'yes'
